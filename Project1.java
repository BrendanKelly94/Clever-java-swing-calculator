/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg413problem1a;

/**
 *
 * @author brend_000
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Project1 extends JFrame implements ActionListener {

    private TextField txField = new TextField();
    private Panel buttonPanel = new Panel();
    private Button buttons[] = new Button[20]; //total 20 buttons on the calculator,numbered from left to right, up to down
//bText[] array contains text on corresponding buttons
    private static final String bText[] = {"7", "8", "9", "+", "4", "5", "6", "-", "1", "2", "3", "*", "0", "^", "=", "/", "(", ")", "C", "CE"};

    public static void main(String argv[]) {
        Project1 calc = new Project1();
    }

    public Project1() {
        setLayout(new BorderLayout());
        add(txField, BorderLayout.NORTH);
        txField.setEditable(false);
        add(buttonPanel, BorderLayout.CENTER);
        buttonPanel.setLayout(new GridLayout(5, 4));
        for (int i = 0; i < 20; i++) //create 20 buttons with corresponding text inbText[] array
        {
            buttons[i] = new Button(bText[i]);
        }
        for (int i = 0; i < 20; i++) //add buttons to button panel
        {
            buttonPanel.add(buttons[i]);
        }
        for (int i = 0; i < 20; i++) //set up buttons to listen for mouse input
        {
            buttons[i].addActionListener(this);
        }

        setTitle("Calculator");
        setSize(400, 400);
        setLocationByPlatform(true);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setVisible(true);
    }

    public void actionPerformed(ActionEvent arg0) { // You need to fill in this fuction

        if (arg0.getSource() == buttons[18]) {
            txField.setText(txField.getText().substring(0, txField.getText().length() - 1));
        } else if (arg0.getSource() == buttons[19]) {
            txField.setText("");
        } else if (arg0.getSource() == buttons[14]) {
            Evaluator e = new Evaluator();
            txField.setText("" + e.eval(txField.getText()));

        } else {
            for (int i = 0; i < buttons.length; i++) {
                if (arg0.getSource() == buttons[i]) {
                    txField.setText(txField.getText() + bText[i]);
                }
            }
        }
    }

    /**
     * Creates new form Project1
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
